pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = credentials('DOCKER_REGISTRY')
        DB_PASSWORD     = credentials('DB_PASSWORD')
        GITHUB_USERNAME = credentials('GITHUB_USERNAME')
        DB_NAME         = 'postgres'
        DB_USER         = 'postgres'
        IMAGE_TAG       = "${env.BUILD_NUMBER}"
    }

    stages {
        stage('Build & Unit Tests') {
            steps {
                sh 'chmod +x ./gradlew'
                sh './gradlew clean test -p bank-exchange'
                sh './gradlew clean build'
            }
        }

        stage('Build Docker Images') {
            steps {
                sh """
                docker build -t ${DOCKER_REGISTRY}/bank-accounts:${IMAGE_TAG} bank-accounts
                docker build -t ${DOCKER_REGISTRY}/bank-blocker:${IMAGE_TAG} bank-blocker
                docker build -t ${DOCKER_REGISTRY}/bank-cash:${IMAGE_TAG} bank-cash
                docker build -t ${DOCKER_REGISTRY}/bank-exchange:${IMAGE_TAG} bank-exchange
                docker build -t ${DOCKER_REGISTRY}/bank-exchange-generator:${IMAGE_TAG} bank-exchange-generator
                docker build -t ${DOCKER_REGISTRY}/bank-front-ui:${IMAGE_TAG} bank-front-ui
                docker build -t ${DOCKER_REGISTRY}/bank-notifications:${IMAGE_TAG} bank-notifications
                docker build -t ${DOCKER_REGISTRY}/bank-transfer:${IMAGE_TAG} bank-transfer
                """
            }
        }

        stage('Push Docker Images') {
            steps {
                withCredentials([string(credentialsId: 'GHCR_TOKEN', variable: 'GHCR_TOKEN')]) {
                    sh """
                    echo \$GHCR_TOKEN | docker login ghcr.io -u ${GITHUB_USERNAME} --password-stdin
                    docker push ${DOCKER_REGISTRY}/bank-accounts:${IMAGE_TAG}
                    docker push ${DOCKER_REGISTRY}/bank-blocker:${IMAGE_TAG}
                    docker push ${DOCKER_REGISTRY}/bank-cash:${IMAGE_TAG}
                    docker push ${DOCKER_REGISTRY}/bank-exchange:${IMAGE_TAG}
                    docker push ${DOCKER_REGISTRY}/bank-exchange-generator:${IMAGE_TAG}
                    docker push ${DOCKER_REGISTRY}/bank-front-ui:${IMAGE_TAG}
                    docker push ${DOCKER_REGISTRY}/bank-notifications:${IMAGE_TAG}
                    docker push ${DOCKER_REGISTRY}/bank-transfer:${IMAGE_TAG}
                    """
                }
            }
        }

        stage('Install PostgreSQL to TEST') {
            steps {
                sh """
                if ! helm repo list | grep -q 'bitnami'; then
                    helm repo add bitnami https://charts.bitnami.com/bitnami
                fi
                helm repo update

                helm upgrade --install postgres bitnami/postgresql \\
                  --namespace test --create-namespace \\
                  --set auth.database=${DB_NAME} \\
                  --set auth.username=${DB_USER} \\
                  --set auth.password=${DB_PASSWORD}
                """
            }
        }

        stage('Helm Deploy to TEST') {
                    steps {
                        sh """
                        helm upgrade --install bank-app bank-app/. \\
                                             --namespace test --create-namespace \\
                                             --set postgresql.auth.password=${DB_PASSWORD} \\
                        					 --set bank-accounts.image.repository=${DOCKER_REGISTRY}/bank-accounts \\
                        					 --set bank-accounts.image.tag=${IMAGE_TAG} \\
                        					 --set bank-blocker.image.repository=${DOCKER_REGISTRY}/bank-blocker \\
                        					 --set bank-blocker.image.tag=${IMAGE_TAG} \\
                        					 --set bank-cash.image.repository=${DOCKER_REGISTRY}/bank-cash \\
                        					 --set bank-cash.image.tag=${IMAGE_TAG} \\
                        					 --set bank-exchange.image.repository=${DOCKER_REGISTRY}/bank-exchange \\
                        					 --set bank-exchange.image.tag=${IMAGE_TAG} \\
                        					 --set bank-notifications.image.repository=${DOCKER_REGISTRY}/bank-notifications \\
                        					 --set bank-notifications.image.tag=${IMAGE_TAG} \\
                                             --set bank-transfer.image.repository=${DOCKER_REGISTRY}/bank-transfer \\
                                             --set bank-transfer.image.tag=${IMAGE_TAG} \\
                        					 --set bank-exchange-generator.image.repository=${DOCKER_REGISTRY}/bank-exchange-generator \\
                        					 --set bank-exchange-generator.image.tag=${IMAGE_TAG} \\
                        					 --set bank-front-ui.image.repository=${DOCKER_REGISTRY}/bank-front-ui \\
                        					 --set bank-front-ui.image.tag=${IMAGE_TAG} \\
                        					 --set bank-front-ui.ingress.hosts[0].host=bank-app-test.local \\
                        					 --set bank-front-ui.ingress.hosts[0].paths[0].path="/" \\
                                             --set bank-front-ui.ingress.hosts[0].paths[0].pathType="Prefix"
                        """
                    }
        }

        stage('Manual Approval for PROD') {
            steps {
                input message: 'Deploy to PROD environment?', ok: 'Yes, deploy'
            }
        }

        stage('Helm Deploy to PROD') {
            steps {
                sh """
                helm upgrade --install bank-app bank-app/. \\
                                     --namespace prod --create-namespace \\
                                     --set postgresql.auth.password=${DB_PASSWORD} \\
                					 --set bank-accounts.image.repository=${DOCKER_REGISTRY}/bank-accounts \\
                					 --set bank-accounts.image.tag=${IMAGE_TAG} \\
                					 --set bank-blocker.image.repository=${DOCKER_REGISTRY}/bank-blocker \\
                					 --set bank-blocker.image.tag=${IMAGE_TAG} \\
                					 --set bank-cash.image.repository=${DOCKER_REGISTRY}/bank-cash \\
                					 --set bank-cash.image.tag=${IMAGE_TAG} \\
                					 --set bank-exchange.image.repository=${DOCKER_REGISTRY}/bank-exchange \\
                					 --set bank-exchange.image.tag=${IMAGE_TAG} \\
                					 --set bank-notifications.image.repository=${DOCKER_REGISTRY}/bank-notifications \\
                					 --set bank-notifications.image.tag=${IMAGE_TAG} \\
                                     --set bank-transfer.image.repository=${DOCKER_REGISTRY}/bank-transfer \\
                                     --set bank-transfer.image.tag=${IMAGE_TAG} \\
                					 --set bank-exchange-generator.image.repository=${DOCKER_REGISTRY}/bank-exchange-generator \\
                					 --set bank-exchange-generator.image.tag=${IMAGE_TAG} \\
                					 --set bank-front-ui.image.repository=${DOCKER_REGISTRY}/bank-front-ui \\
                					 --set bank-front-ui.image.tag=${IMAGE_TAG} \\
                					 --set bank-front-ui.ingress.hosts[0].host=bank-app.local \\
                					 --set bank-front-ui.ingress.hosts[0].paths[0].path="/" \\
                                     --set bank-front-ui.ingress.hosts[0].paths[0].pathType="Prefix"
                """
            }
        }
    }
}