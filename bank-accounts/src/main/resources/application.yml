server:
  port: 8082

spring:
  application:
    name: bank-accounts
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI}
  r2dbc:
    url: r2dbc:${SPRING_DATASOURCE_URL}
    username: ${POSTGRESQL_USER:postgres}
    password: ${POSTGRESQL_PASSWORD:postgres}
    pool:
      enabled: true
      initial-size: 10
      max-size: 50
      max-idle-time: 30s
      max-life-time: 10m
      validation-query: SELECT 1
  datasource:
    url: jdbc:${SPRING_DATASOURCE_URL}
  jpa:
    show-sql: true
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yml
    default-schema: public
    url: jdbc:${SPRING_DATASOURCE_URL}
    user: ${POSTGRESQL_USER:postgres}
    password: ${POSTGRESQL_PASSWORD:postgres}
    enabled: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      properties:
        acks: all
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    admin:
      client-id: bank-accounts
    consumer:
      properties:
        security.protocol: PLAINTEXT
    template:
      observation-enabled: true

management:
  zipkin:
    tracing:
      endpoint:  ${ZIPKIN_ENDPOINT}
  tracing:
    sampling:
      probability: 1
  endpoints:
    web:
      exposure:
        include: health,info,prometheus