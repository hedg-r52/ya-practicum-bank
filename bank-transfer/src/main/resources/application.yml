server:
  port: 8090

clients:
  accounts:
    uri: ${CLIENT_ACCOUNTS_URI}
  blocker:
    uri: ${CLIENT_BLOCKER_URI}
  notifications:
    uri: ${CLIENT_NOTIFICATIONS_URI}
  exchange:
    uri: ${CLIENT_EXCHANGE_URI}

spring:
  application:
    name: bank-transfer
  r2dbc:
    url: r2dbc:${SPRING_DATASOURCE_URL}
    username: ${POSTGRESQL_USER:postgres}
    password: ${POSTGRESQL_PASSWORD:postgres}
  jpa:
    show-sql: true
  liquibase:
    url: jdbc:${SPRING_DATASOURCE_URL}
    user: ${POSTGRESQL_USER:postgres}
    password: ${POSTGRESQL_PASSWORD:postgres}
    change-log: classpath:/db/changelog/db.changelog-master.yml
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_BANK_REALM_URI}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      properties:
        acks: all
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    admin:
      client-id: bank-cash
    consumer:
      properties:
        security.protocol: PLAINTEXT
    template:
      observation-enabled: true

management:
  zipkin:
    tracing:
      endpoint:  ${ZIPKIN_ENDPOINT}
  tracing:
    sampling:
      probability: 1
  endpoints:
    web:
      exposure:
        include: health,info,prometheus